/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import com.formdev.flatlaf.FlatDarculaLaf;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import model.bean.Funcionarios;
import model.dao.FuncionarioDAO;

/**
 *
 * @author 232.933573
 */
public class GerenciarFuncionarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form GerenciarFuncionarios
     */
    public GerenciarFuncionarios() {
        initComponents();
        
        readJtable();
        readJtableCargo();
        
        SwingUtilities.invokeLater(() -> {
        
            try {
                UIManager.setLookAndFeel(new FlatDarculaLaf());
                SwingUtilities.updateComponentTreeUI(this);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(GerenciarProdutos.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        });
    }
    
        public void readJtable(){
        
        DefaultTableModel modelo = (DefaultTableModel) jTCadastro.getModel();
        modelo.setNumRows(0);
        FuncionarioDAO pdao = new FuncionarioDAO();
        
        for(Funcionarios p: pdao.read()){
            
            modelo.addRow(new Object[]{
                
                p.getNomeFuncionario(),
                p.getEmail(),
                p.getCpf(),

         
            });
        }
    }
    public void readJtableCargo(){
        
        DefaultTableModel modelo = (DefaultTableModel) jTCadastro.getModel();
        modelo.setNumRows(0);
        FuncionarioDAO pdao = new FuncionarioDAO();
        
        for(Funcionarios p: pdao.read()){
            
            modelo.addRow(new Object[]{
                
                p.getNomeFuncionario(),
                p.getEmail(),
                p.getCargo(),

         
            });
        }
    }

    public void atualizarTabelaCadastro() {
    DefaultTableModel model = (DefaultTableModel) jTCadastro.getModel();
    model.setRowCount(0);
    
    FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
    List<Funcionarios> funcionarios = funcionarioDAO.read();
    for (Funcionarios funcionario : funcionarios) {
        model.addRow(new Object[]{funcionario.getNomeFuncionario(), funcionario.getEmail(), funcionario.getCpf()});
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTCadastro = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        botaooadicionarFuncionarios = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setClosable(true);

        jTCadastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Email", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTCadastro);

        jButton1.setText("Remover Funcionário");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        botaooadicionarFuncionarios.setText("Adicionar Funcionário");
        botaooadicionarFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaooadicionarFuncionariosActionPerformed(evt);
            }
        });

        jButton3.setText("Salvar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o Cargo", "Repositor", "Financeiro", "Gerente", "Administrador", " " }));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome do Funcionario", "Email", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaooadicionarFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 716, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaooadicionarFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaooadicionarFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaooadicionarFuncionariosActionPerformed
            
        int selectedRow = jTCadastro.getSelectedRow();
        
        if (selectedRow != -1) {
            // Obter os dados do funcionário selecionado
            String nome = (String) jTCadastro.getValueAt(selectedRow, 0);
            String email = (String) jTCadastro.getValueAt(selectedRow, 1);
            String cargo = (String) jComboBox2.getSelectedItem();
        
            // DELETAR NA PRIMEIRA TABELA (NÃO TESTADO)
            Funcionarios p  = new Funcionarios();
            FuncionarioDAO dao = new FuncionarioDAO();
        
            dao.delete(p);
        
            // Adicionar os dados à tabela jTable2
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.addRow(new Object[]{nome, email, cargo});
        
        
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um funcionário na tabela de cadastro.");
        }
    
        readJtable();
        readJtableCargo();
    }//GEN-LAST:event_botaooadicionarFuncionariosActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
        JOptionPane.showMessageDialog(this, "Funcionário Registrado com SUCESSO!!");
        dispose();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        // BOTÃO REMOVER FUNC NA SEGUNDA TABELA (NÃO TESTADO)
        if (jTable2.getSelectedRow() != -1){
            
            Funcionarios p  = new Funcionarios();
            FuncionarioDAO dao = new FuncionarioDAO();
        
            dao.delete(p);
        
            readJtable();
            readJtableCargo();
        }
        else{
            JOptionPane.showMessageDialog(null, "Funcionário não selecionado");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaooadicionarFuncionarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTCadastro;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
